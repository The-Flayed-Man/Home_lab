#!/bin/bash

# Function to check the success of the previous command
check_success() {
    if [ $? -ne 0 ]; then
        echo "$1"  # Display error message
        exit 1      # Exit script with error
    fi
}

# Create Jenkins user if it doesn't exist
if id "jenkins" &>/dev/null; then
    echo "Jenkins user already exists."
else
    echo "Creating Jenkins user..."
    sudo adduser --system --group --home /var/lib/jenkins jenkins
    check_success "Failed to create Jenkins user."
fi

# Check and Install Java (OpenJDK 11)
if type -p java; then
    JAVA_VERSION=$(java -version 2>&1 | awk -F '"' '/version/ {print $2}')
    if [[ "$JAVA_VERSION" < "11" ]]; then
        echo "Java version is less than 11. Installing Java 17..."
        sudo apt update -q
        sudo apt install fontconfig openjdk-17-jre -y
        check_success "Failed to install Java."
    else
        echo "Java version $JAVA_VERSION is already installed."
    fi
else
    echo "Installing Java..."
    sudo apt update -q
    sudo apt install fontconfig openjdk-17-jre -y
    check_success "Failed to install Java."
fi

# Check and Add Jenkins Repository
if [ ! -f /etc/apt/sources.list.d/jenkins.list ]; then
    echo "Adding Jenkins Repository..."
    wget -O /usr/share/keyrings/jenkins-keyring.asc https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
    check_success "Failed to download Jenkins key."
    
    echo "deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/" | sudo tee /etc/apt/sources.list.d/jenkins.list
    check_success "Failed to add Jenkins repository."
    
    sudo apt update -q
else
    echo "Jenkins repository is already added."
fi

# Check and Install Jenkins
if ! dpkg -l | grep -q jenkins; then
    echo "Installing Jenkins..."
    sudo apt install -y -q jenkins
    check_success "Failed to install Jenkins."
else
    echo "Jenkins is already installed."
fi

# Start and Enable Jenkins Service
echo "Starting Jenkins..."
sudo systemctl start jenkins
check_success "Failed to start Jenkins service."
echo "Jenkins service started successfully."

sudo systemctl enable jenkins
check_success "Failed to enable Jenkins service."
echo "Jenkins service enabled to start on boot successfully."

# Generate SSH Key for Jenkins User
echo "Generating SSH key for Jenkins user..."

# Ensure the .ssh directory exists
sudo -u jenkins mkdir -p /var/lib/jenkins/.ssh
check_success "Failed to create .ssh directory for Jenkins user."

# Set proper permissions for the .ssh directory
sudo -u jenkins chmod 700 /var/lib/jenkins/.ssh
check_success "Failed to set permissions for .ssh directory."

# Generate SSH Key for Jenkins User
if [ ! -f /var/lib/jenkins/.ssh/id_rsa ]; then
    # Generate the SSH key
    sudo -u jenkins ssh-keygen -t rsa -b 4096 -N "" -f /var/lib/jenkins/.ssh/id_rsa
    check_success "Failed to generate SSH key for Jenkins user."
    echo "SSH key for Jenkins user generated successfully."
else
    echo "SSH key for Jenkins user already exists. Skipping generation."
fi

# Get the primary IP address of the server
IP_ADDRESS=$(hostname -I | awk '{print $1}')
echo "Jenkins Installation Complete."
echo "You can access Jenkins at http://$IP_ADDRESS:8080"

# Display the initial admin password for Jenkins
if [ -f /var/lib/jenkins/secrets/initialAdminPassword ]; then
    echo "Initial Admin Password for Jenkins:"
    sudo cat /var/lib/jenkins/secrets/initialAdminPassword
else
    echo "Initial Admin Password not found. You may need to check the Jenkins installation."
fi
